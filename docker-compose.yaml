services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: >
      /start
    networks:
      - my_network
    volumes:
      - .:/app:z

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my_network
  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
    networks:
      - my_network

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge
